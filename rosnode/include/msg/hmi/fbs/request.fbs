
include "public.fbs";

namespace RBN100;



// 请求图像视频
table FRequestVideo 
{
    state:bool;
}

// 请求扫描二维码
table FRequestScanQR 
{
    state:bool;  //true 开始  false 停止
    pram:int;  // 0: start, 1:end
}

//新建场景
table FRequestCreateSence
{
    sence_info:FSenceInfo;
}

//扫码新建地图
table FRequestCreateMap_Tag
{
    map_info:FMapInfo;
}

//任意点建图
table FRequestCreateMap_Any
{
    map_info:FMapInfo;
}

//电梯建图
table FRequestCreateMap_Elevator
{
    map_info:FMapInfo;
}

//建图结束
table FRequestCreateMap_Stop
{
    state:bool;
}

//创建位姿节点
table FRequestCreatePoseNode
{
    pose_info:FPoseNodeInfo;
}

//创建启动定位节点
table FRequestCreateStartNode
{
    start_info:FStartNodeInfo;
}

//创建待命节点
table FRequestCreateStandByNode
{
    standby_info:FStandByNodeInfo;
}

//创建途经节点
table FRequestCreatePassNode
{
    pass_info:FPassNodeInfo;
}

//创建JMR节点
table FRequestCreateJMRNode
{
    jmr_info:FJMRNodeInfo;
}

table FSenceInfo
{
    uuid:string;
    ct_time:int64;
    first_upload_tm:int64;
    modify_tm:int64;
    test_ver:string;
    operate_ver:string;
    core_min_ver:string;
    proj_min_ver:string;
    sence_name:string;
    addr:string;
    ct_user:string;
    proj_id:string;
    proj_name:string;
    area_id:string;
    area_name:string;
    rely_db_path:string;
    rely_file_path:string;
}
    

table FMapInfo
{
    uuid:string;
    proj:string;
    name1:string;
    name2:string;
    name3:string;
    env_map_ver:string;
    soft_core:string;
    resolution:float;
    area_outline:[FPoint]; //左下 右上
    ct_time:int64;
    ct_user:string;
    ct_dev:string;
    first_upload_tm:int64;
    modify_tm:int64;
    modify_user:string;
    modify_dev:string;
    slam_env_mappath:string;
    slam_reflex_mappath:string;
    slam_trans_mappath:string;
    slam_obs_base_mappath:string;
    ui_map_angle:float;
    ui_crop_range:[FPoint]; //左上 右下
    ui_display_scale:float;
    ui_parm:FPoseTransParm;
    ui_env_thumb_path:string;
    ui_env_base_path:string;
    nav_obs_path:string;
    nav_run_mapconfig_path:string;
    nav_virwall_auto_path:string;
    nav_virwall_path:string;
    nav_run_track_path:string;
    per_senmatic_map_path:string;
    slam_3d_env_path:string;
}

table FPoseNodeInfo
{
    uuid:string;
    name1:string;
    name2:string;
    name3:string;
    show_level:int;
    by_proj:string;
    node_type:int;   //FNodeType
    sence:string;
    envmap:string;
    ct_dev:string;
    ct_user:string;
    ct_tm:int64;
    first_upload_tm:int64;
    modify_tm:int64;
    versatility:int;
    soft_ver:string;
    proj_soft_ver:string;
    center:FPoint;
    angle:float;
    node_area:float;
    node_angle:float;
    is_release:bool;
    timeout:int;
    is_coordinate:bool;
    parm:FPoseTransParm;
    is_tf_return:bool;
    is_ntf_return:bool;
    is_all_return:bool;
    link_node:string;
    tagID:int;
    action_x:float;
    action_y:float;
    action_z:float;
}

table FStartNodeInfo
{
    uuid:string;
    name1:string;
    name2:string;
    name3:string;
    show_level:int;
    by_proj:string;
    node_type:int;   //FNodeType
    sence:string;
    envmap:string;
    ct_dev:string;
    ct_user:string;
    ct_tm:int64;
    first_upload_tm:int64;
    modify_tm:int64;
    versatility:int;
    soft_ver:string;
    proj_soft_ver:string;
    center:FPoint;
    angle:float;
    node_area:float;
    node_angle:float;
    is_release:bool;
    timeout:int;
    is_coordinate:bool;
    parm:FPoseTransParm;
    is_tf_return:bool;
    is_ntf_return:bool;
    is_all_return:bool;
    link_node:string;
    action_uuid:string;
}

table FStandByNodeInfo
{
    uuid:string;
    name1:string;
    name2:string;
    name3:string;
    show_level:int;
    by_proj:string;
    node_type:int;   //FNodeType
    sence:string;
    envmap:string;
    ct_dev:string;
    ct_user:string;
    ct_tm:int64;
    first_upload_tm:int64;
    modify_tm:int64;
    versatility:int;
    soft_ver:string;
    proj_soft_ver:string;
    center:FPoint;
    angle:float;
    node_area:float;
    node_angle:float;
    is_release:bool;
    timeout:int;
    is_coordinate:bool;
    parm:FPoseTransParm;
    is_tf_return:bool;
    is_ntf_return:bool;
    is_all_return:bool;
    link_node:string;
    action_uuid:string;
}

table FPassNodeInfo
{
    uuid:string;
    name1:string;
    name2:string;
    name3:string;
    show_level:int;
    by_proj:string;
    node_type:int;   //FNodeType
    sence:string;
    envmap:string;
    ct_dev:string;
    ct_user:string;
    ct_tm:int64;
    first_upload_tm:int64;
    modify_tm:int64;
    versatility:int;
    soft_ver:string;
    proj_soft_ver:string;
    center:FPoint;
    angle:float;
    node_area:float;
    node_angle:float;
    is_release:bool;
    timeout:int;
    is_coordinate:bool;
    parm:FPoseTransParm;
    is_tf_return:bool;
    is_ntf_return:bool;
    is_all_return:bool;
    link_node:string;
}

table FJMRNodeInfo
{
    uuid:string;
    name1:string;
    name2:string;
    name3:string;
    show_level:int;
    by_proj:string;
    node_type:int;   //FNodeType
    sence:string;
    envmap:string;
    ct_dev:string;
    ct_user:string;
    ct_tm:int64;
    first_upload_tm:int64;
    modify_tm:int64;
    versatility:int;
    soft_ver:string;
    proj_soft_ver:string;
    center:FPoint;
    angle:float;
    node_area:float;
    node_angle:float;
    is_release:bool;
    timeout:int;
    is_coordinate:bool;
    parm:FPoseTransParm;
    is_tf_return:bool;
    is_ntf_return:bool;
    is_all_return:bool;
    link_node:string;
    action_uuid:string;
}

table FFloorIndex
{
    floor:int;
    name:string;
}

table FElevatorInfo
{
    uuid:string;
    name1:string;
    name2:string;
    addr:string;
    communication_mode:int;
    plugin:string;
    communication_list:int;
    distance:int;
    count:int;
    floorinfo:[FFloorIndex];
}

//录入电梯信息
table FRequestElevatorInfoInput
{
    elevator_info:FElevatorInfo;
}

table FElevatorOutNodeInfo
{
    uuid:string;
    name1:string;
    name2:string;
    name3:string;
    show_level:int;
    by_proj:string;
    node_type:int;   //FNodeType
    sence:string;
    envmap:string;
    ct_dev:string;
    ct_user:string;
    ct_tm:int64;
    first_upload_tm:int64;
    modify_tm:int64;
    versatility:int;
    soft_ver:string;
    proj_soft_ver:string;
    center:FPoint;
    angle:float;
    node_area:float;
    node_angle:float;
    is_release:bool;
    timeout:int;
    is_coordinate:bool;
    parm:FPoseTransParm;
    is_tf_return:bool;
    is_ntf_return:bool;
    is_all_return:bool;
    link_node:string;
    action_uuid:string;
}

//创建电梯前节点
table FRequestCreateElevatorOutNode
{
    ele_out_info:FElevatorOutNodeInfo;
}

table FElevatorTransformNodeInfo
{
    uuid:string;
    name1:string;
    name2:string;
    name3:string;
    show_level:int;
    by_proj:string;
    node_type:int;   //FNodeType
    sence:string;
    envmap:string;
    ct_dev:string;
    ct_user:string;
    ct_tm:int64;
    first_upload_tm:int64;
    modify_tm:int64;
    versatility:int;
    soft_ver:string;
    proj_soft_ver:string;
    center:FPoint;
    angle:float;
    node_area:float;
    node_angle:float;
    is_release:bool;
    timeout:int;
    is_coordinate:bool;
    parm:FPoseTransParm;
    is_tf_return:bool;
    is_ntf_return:bool;
    is_all_return:bool;
    link_node:string;
    action_uuid:string;
}

//创建电梯坐标转换节点
table FRequestCreateElevatorTransformNode
{
    ele_transf_info:FJMRNodeInfo;
}

table FActionStandBy
{
    uuid:string;
    node_uuid:string;
    sence_uuid:string;
    id:string;
    name:string;
    timeout:int;
    l_x:float;
    l_y:float;
    l_z:float;
    dis_pre:int;
    angle_pre:int;
    ct_time:int64;
    ct_user:string;
    modify_tm:int64;
    modify_user:string;
}

//待命节点动作
table FRequestCreateActionStandBy
{
    action_standby:FActionStandBy;
}

table FActionJMR
{
    uuid:string;
    node_uuid:string;
    sence_uuid:string;
    id:string;
    name:string;
    timeout:int;
    l_x:float;
    l_y:float;
    l_z:float;
    dis_pre:int;
    angle_pre:int;
    ct_time:int64;
    ct_user:string;
    modify_tm:int64;
    modify_user:string;
}

//JMR配送节点动作
table FRequestCreateActionJMR
{
    action_jmr:FActionJMR;
}

table FActionStart
{
    uuid:string;
    node_uuid:string;
    sence_uuid:string;
    distance:float;
    angle:float;
}

//启动节点动作
table FRequestCreateActionStart
{
    action_start:FActionStart;
}

table FActionElevatorOut
{
    uuid:string;
    node_uuid:string;
    sence_uuid:string;
    floor:int;
    name:string;
}

//电梯外节点动作
table FRequestCreateActionElevatorOut
{
    action_elevator_out:FActionElevatorOut;
}

table FActionElevatorIn
{
    uuid:string;
    node_uuid:string;
    sence_uuid:string;
    floor:int;
    name:string;
}

//电梯内节点动作
table FRequestCreateActionElevatorIn
{
    action_elevator_in:FActionElevatorIn;
}

table FActionElevatorTransf
{
    uuid:string;
    node_uuid:string;
    sence_uuid:string;
    id:string;
    name:string;
    timeout:int;
    l_x:float;
    l_y:float;
    l_z:float;
    dis_pre:int;
    angle_pre:int;
    ct_time:int64;
    ct_user:string;
    modify_tm:int64;
    modify_user:string;
}

//电梯坐标转换节点动作
table FRequestCreateActionElevatorTransf
{
    action_ele_transf:FActionElevatorTransf;
}

table FPathInfo
{
    uuid:string;
    node1_uuid:string;
    node1_start:bool;
    node2_uuid:string;
    node2_start:bool;
    type:int;
    node1_2:FPoseTransParm;
    node2_1:FPoseTransParm;
    map_uuid:string;
    filepath:string;
    status:int;
    ct_user:string;
    ct_type:int;
    ct_dev:string;
    ct_time:int64;
    upload_time:int64;
    test:int;
    pathlength:float;
    runtime_total:int;
    runelec_total:float;
    pt:[FPoint];
}

table FTaskNodeList
{
    uuid:string;
    task_index:int;
    task_sort:int;
    action:int;
    total_timeout:int;
    action_timeout:int;
    act_list:[FTaskActionList];
}

table FTaskActionList
{
    uuid:string;
    task_index:int;
    task_sort:int;
    timeout:int;
    task_cmd:int;
}

table FReturnNode
{
    node_uuid:string;
    act_uuid:string;
}

table FTaskInfo
{
    uuid:string;
    id:string;
    type:int;
    task_name:string;
    ct_time:int64;
    upload_time:int64;
    time_zone:int;
    ct_user:string;
    ct_type:int;
    priority:int;
    timing:bool;
    delay_time:int;
    timimg_start_time:string;
    timing_type:int;
    limits_level:int;
    proj_id:string;
    sence_id:string;
    task_type:int;
    sence_data_ver:string;
    sence_config_ver:string;
    dev_sel_type:int;
    retrun_default:int;
    execp_dedfault:int;
    task_node_list:[FTaskNodeList];
    fini_list:[FReturnNode];
    excep_list:[FReturnNode];
}

//下发任务
table FRequestSetTask
{
    type:int;
    task_info:FTaskInfo;
}

table FSubTaskInfo
{
    type:int;
}

table FRequestSubTask
{
    type:int;
    subtask_info:FSubTaskInfo;
}

table FRequestSetPath
{
    path_info:FPathInfo;
}

//登录
table FRequestLogin
{
    type:int; //0：管理工具  1：小屏UI
    username:string;
    password:string;
}

//获取场景列表
table FRequestGetSenceList{}

//获取节点及动作点
table  FRequestGetNodeList{}


//切换状态机
table FRequestSetState
{
    state:int;
}


//获取路径
table FRequestGetPathList
{
}

//获取地图列表
table FRequestGetMapList
{
}

//设置系统时间
table FRequestSetSysTime
{
    time:uint64; //us
}

//获取系统时间
table FRequestGetSysTime{}

//开仓门
table FRequestOpenHatch
{
    mode:int; //0:普通开门  1:客户开门
    pwd:string;
}

//关仓门
table FRequestCloseHatch
{
    mode:int; //0:普通关门  1:客户关门
}

//电梯状态
table FRequestElevatorState
{
    id:string; //电梯uuid
    door_state:FElevatorDoorState; //电梯门状态
}

//任务暂停
table FRequestTaskPause{}

//任务重启
table FRequestTaskReStart{}

enum FTaskStopType:byte
{
    Stop = 0,           //原地终止
    NodeStop,           //运行到节点终止，不请求返回异常点
    NodeStopException,  //运行到节点终止，并向调度核心请求返回异常点
    NodeStopStart,      //运行到节点终止，并向调度核心请求返回起点
}

enum FTaskSendSrc:byte
{
    UI = 0,     //设备端小屏幕
    App,        //登录设备的PC上app
    Cloud,      //云端调度系统
    Local,      //设备本机
}

//停止任务
table FTaskStopInfo
{
    uuid:string;
    type:int; // 0: 人工  1：自动
    src:FTaskSendSrc;
    user:string;
    tm:int64;
    target:int; // 0:本机  1：特定SN
    sn:string; 
    stoptask:int; //0:当前任务 1:特定任务
    stopuuid:string; 
    stoptype:FTaskStopType;
}

table FRequestTaskStop
{
    stop_info:FTaskStopInfo;
}

union FRequestDataField
{
    FRequestVideo,
    FRequestScanQR,
    FRequestCreateSence,
    FRequestCreateMap_Tag,
    FRequestCreateMap_Any,
    FRequestCreateMap_Elevator,
    FRequestCreateMap_Stop,
    FRequestCreatePoseNode,
    FRequestCreateStartNode,
    FRequestCreateStandByNode,
    FRequestCreatePassNode,
    FRequestCreateJMRNode,
    FRequestElevatorInfoInput,
    FRequestCreateElevatorOutNode,
    FRequestCreateElevatorTransformNode,
    FRequestCreateActionStandBy,
    FRequestCreateActionJMR,
    FRequestCreateActionStart,
    FRequestCreateActionElevatorOut,
    FRequestCreateActionElevatorIn,
    FRequestCreateActionElevatorTransf,
    FRequestSetTask,
    FRequestSubTask,
    FRequestSetPath,
    FRequestLogin,
    FRequestGetSenceList,
    FRequestSetState,
    FRequestGetPathList,
    FRequestGetNodeList,
    FRequestSetSysTime,
    FRequestGetSysTime,
    FRequestOpenHatch,
    FRequestCloseHatch,
    FRequestGetMapList,
    FRequestElevatorState,
    FRequestTaskStop,
}

table Request
{
    type:FRequestType;
    message:FRequestDataField;
}

root_type Request;