<?xml version="1.0"?>

<robot name="rbn100_chassis" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:property name="visualize" value="false" />

  <gazebo reference="base_link">
    <material>Gazebo/Gold</material>
  </gazebo>

  <xacro:macro name="wheel_prop" params="pos" >
    <gazebo reference="${pos}_wheel">
      <mu1>0.54</mu1>
      <mu2>0.54</mu2>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <minDepth>0.001</minDepth>
      <maxVel>20</maxVel>
      <material>Gazebo/Gray</material>
    </gazebo>
  </xacro:macro>
  <xacro:wheel_prop pos="left" />
  <xacro:wheel_prop pos="right" />

  <!-- <xacro:macro name="vertical_prop" params="pos" >
    <gazebo reference="vertical_${pos}">
      <mu1>0.1</mu1>
      <mu2>0.1</mu2>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <minDepth>0.001</minDepth>
      <maxVel>1.2</maxVel>
      <material>Gazebo/Gold</material>
    </gazebo>
  </xacro:macro>
  <xacro:vertical_prop pos="FL" />
  <xacro:vertical_prop pos="FR" />
  <xacro:vertical_prop pos="BL" />
  <xacro:vertical_prop pos="BR" /> -->

  <xacro:macro name="universal_prop" params="pos" >
    <gazebo reference="universal_${pos}">
      <mu1>0.1</mu1>
      <mu2>0.1</mu2>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <minDepth>0.001</minDepth>
      <maxVel>20</maxVel>
      <material>Gazebo/Gold</material>
    </gazebo>
  </xacro:macro>
  <xacro:universal_prop pos="FL" />
  <xacro:universal_prop pos="FR" />
  <xacro:universal_prop pos="BL" />
  <xacro:universal_prop pos="BR" />

  <xacro:macro name="caster_prop" params="pos" >
    <gazebo reference="${pos}_caster">
      <mu1>0.1</mu1>
      <mu2>0.1</mu2>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <minDepth>0.001</minDepth>
      <maxVel>20</maxVel>
      <material>Gazebo/Gold</material>
    </gazebo>
  </xacro:macro>
  <xacro:caster_prop pos="front" />
  <xacro:caster_prop pos="back" />

  <!-- 插件程序中修改数据时间为硬件时间 -->
  <!-- lidar -->
  <gazebo reference="lidar">
    <material>Gazebo/FlatBlack</material>
    <sensor type="ray" name="lidar_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>${visualize}</visualize>
      <update_rate>15</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1535</samples>
            <resolution>1</resolution>
            <min_angle>-2.356</min_angle>
            <max_angle>2.356</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.05</min>
          <max>30</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.001</stddev>
        </noise>
      </ray>
      <plugin name="lidar_controller" filename="libgazebo_ros_HTlaser.so">
        <topicName>scan</topicName>
        <frameName>lidar</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!-- tof -->
  <gazebo reference="tof">
    <material>Gazebo/FlatBlack</material>
    <sensor type="depth" name="tof">
      <update_rate>10.0</update_rate>
      <visualize>${visualize}</visualize>
      <camera name="head_tof">
        <horizontal_fov>1.047</horizontal_fov> <!-- 60 degree -->
        <image>
            <width>224</width>
            <height>172</height>
            <format>R8G8B8</format>
        </image>
        <clip>
            <!-- 相机可视范围 -->
            <near>0.2</near>
            <far>5</far>
        </clip>
      </camera>
      <plugin name="tof_controller" filename="libgazebo_ros_HTopenni_kinect.so">
          <baseline>0.1</baseline>
          <alwaysOn>true</alwaysOn>
          <!-- keep zero,parent tag sensor will control frame rate -->
          <updateRate>0</updateRate>
          <cameraName>tof</cameraName>
          <imageTopicName>/rgb/image_raw</imageTopicName>
          <cameraInfoTopicName>/rgb/camera_info</cameraInfoTopicName>
          <depthImageTopicName>depth/image_raw</depthImageTopicName>
          <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
          <pointCloudTopicName>depth/points</pointCloudTopicName>
          <frameName>kinect</frameName>
          <!-- 点云工作范围 -->
          <pointCloudCutoff>0.2</pointCloudCutoff>
          <pointCloudCutoffMax>5</pointCloudCutoffMax>
          <!-- 畸变系数 -->
          <distortionK1>0.00000001</distortionK1>
          <distortionK2>0.00000001</distortionK2>
          <distortionK3>0.00000001</distortionK3>
          <distortionT1>0.00000001</distortionT1>
          <distortionT2>0.00000001</distortionT2>
          <!-- 下面这些一般是0 -->
          <CxPrime>0</CxPrime>
          <Cx>0</Cx>
          <Cy>0</Cy>
          <focalLength>0</focalLength>
          <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>

  <!-- camera -->
  <gazebo reference="camera">
    <material>Gazebo/FlatBlack</material>
    <sensor type="camera" name="camera">
      <update_rate>25</update_rate>
      <visualize>${visualize}</visualize>
      <camera name="head_camera">
        <horizontal_fov>1.692</horizontal_fov> <!-- 97 degree -->
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format> <!-- need to be gray -->
        </image>
        <clip>
          <near>0.1</near>
          <far>10</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_HTcamera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0</updateRate>
        <cameraName>camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <!-- 超声和cliff采样数和精度需要确认 -->
  <!-- sonar -->
  <xacro:macro name="sonar_plugin" params="pos">
    <gazebo reference="sonar_${pos}">
      <material>Gazebo/FlatBlack</material>
      <sensor type="ray" name="sonar_${pos}">
        <pose>0 0 0 0 0 0</pose>
        <visualize>${visualize}</visualize>
        <update_rate>15</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>8</samples>  <!-- need reconfirm -->
              <resolution>1</resolution>
              <min_angle>-0.523</min_angle> <!-- 15 * 2 degree -->
              <max_angle>0.523</max_angle>
            </horizontal>
            <vertical>
              <samples>8</samples>
              <resolution>1</resolution>
              <min_angle>-0.523</min_angle>
              <max_angle>0.523</max_angle>
            </vertical>
          </scan>
          <range>
            <min>0.02</min>
            <max>2.5</max>
            <resolution>0.001</resolution>
          </range>
        </ray>
        <plugin filename="libgazebo_ros_HTrange.so" name="sonar_controller">
          <gaussianNoise>0.005</gaussianNoise>
          <alwaysOn>true</alwaysOn>
          <updateRate>0</updateRate>
          <topicName>sonar_${pos}</topicName>
          <frameName>sonar_${pos}</frameName>
          <radiation>ultrasound</radiation>
          <fov>0.5</fov>  <!-- need confirm -->
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>
  <xacro:sonar_plugin pos="front"/>
  <xacro:sonar_plugin pos="back"/>
  <xacro:sonar_plugin pos="FL"/>
  <xacro:sonar_plugin pos="FR"/>

  <!-- cliff -->
  <xacro:macro name="cliff_plugin" params="pos">
    <gazebo reference="cliff_${pos}">
      <material>Gazebo/FlatBlack</material>
      <sensor type="ray" name="cliff_${pos}">
        <always_on>true</always_on>
        <update_rate>50</update_rate>
        <visualize>${visualize}</visualize>
        <ray>
          <scan>
            <horizontal>
              <samples>10</samples>
              <resolution>1</resolution>
              <min_angle>-0.0436</min_angle>  <!-- -2.5 degree -->
              <max_angle>0.0436</max_angle> <!-- 2.5 degree -->
            </horizontal>
            <vertical>
              <samples>10</samples>
              <resolution>1</resolution>
              <min_angle>-0.0436</min_angle>  <!-- -2.5 degree -->
              <max_angle>0.0436</max_angle> <!-- 2.5 degree -->
            </vertical>
          </scan>
          <range>
            <min>0.02</min>
            <max>0.15</max>
            <resolution>0.005</resolution>
          </range>
        </ray>
        <!-- <plugin filename="libgazebo_ros_HTrange.so" name="cliff_controller">
          <gaussianNoise>0.0005</gaussianNoise>
          <alwaysOn>true</alwaysOn>
          <updateRate>0</updateRate>
          <topicName>cliff_${pos}</topicName>
          <frameName>cliff_${pos}</frameName>
          <radiation>ultrasound</radiation>
          <fov>0.5</fov>
        </plugin> -->
      </sensor>
    </gazebo>
  </xacro:macro>
  <xacro:cliff_plugin pos="FL"/>
  <xacro:cliff_plugin pos="FR"/>
  <xacro:cliff_plugin pos="BL"/>
  <xacro:cliff_plugin pos="BR"/>

  <!-- bumper -->
  <gazebo reference="bumper">
    <material>Gazebo/FlatBlack</material>
    <selfCollide>false</selfCollide>
    <sensor name="bumper" type="contact">
      <update_rate>50.0</update_rate>
      <visualize>${visualize}</visualize>
      <contact>
        <!-- 
          bumper是urdf中collision标签的名字，其他固定。
          可以通过gz sdf -p model.urdf > model.sdf查
         -->
        <collision>base_footprint_fixed_joint_lump__bumper_collision_2</collision>
      </contact>
      <!-- <plugin filename="libgazebo_ros_HTbumper.so" name="bumper_controller">
        <alwaysOn>true</alwaysOn>
        <bumperTopicName>contact</bumperTopicName>
        <frameName>bumper</frameName>
      </plugin> -->
    </sensor>
  </gazebo>

  <!-- ros sensor plugin -->
  <!-- <gazebo reference="imu">
    <gravity>true</gravity>
    <sensor type="imu" name="imu">
      <always_on>true</always_on>
      <update_rate>1000</update_rate>
      <visualize>true</visualize>
      <plugin name="imu_controller" filename="libgazebo_ros_HTimu_sensor.so">
        <topicName>imu</topicName>
        <bodyName>imu</bodyName>
        <updateRateHZ>100.0</updateRateHZ>
        <gaussianNoise>0.00001</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu</frameName>
        <initialOrientationAsReference>false</initialOrientationAsReference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo> -->

  <!-- imu -->
  <gazebo reference="imu">
    <sensor type="imu" name="imu">
      <update_rate>500</update_rate>
      <visualize>${visualize}</visualize>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>${0.0014*0.0014}</stddev> <!-- 0.25 x 0.25 (deg/s) -->
            <bias_mean>0.0</bias_mean>
            <bias_stddev>0.0</bias_stddev>
          </rate>
          <accel> <!-- not used in the plugin and real robot, hence using tutorial values -->
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </sensor>
  </gazebo>

  <!-- 
    ros control
   -->
  <!-- <transmission name="left_wheel_joint_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="left_wheel_joint">
          <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="left_wheel_joint_motor">
          <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
          <mechanicalReduction>1</mechanicalReduction>
      </actuator>
  </transmission>
  <transmission name="right_wheel_joint_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="right_wheel_joint">
          <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="right_wheel_joint_motor">
          <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
          <mechanicalReduction>1</mechanicalReduction>
      </actuator>
  </transmission>
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
        <rosDebugLevel>Debug</rosDebugLevel>
        <publishWheelTF>true</publishWheelTF>
        <robotNamespace>/</robotNamespace>
        <publishTf>1</publishTf>
        <publishWheelJointState>true</publishWheelJointState>
        <alwaysOn>true</alwaysOn>
        <updateRate>1000</updateRate>
        <legacyMode>true</legacyMode>
        <leftJoint>left_wheel_joint</leftJoint>
        <rightJoint>right_wheel_joint</rightJoint>
        <wheelSeparation>0.322</wheelSeparation>
        <wheelDiameter>0.0169</wheelDiameter>
        <broadcastTF>1</broadcastTF>
        <wheelTorque>1</wheelTorque>
        <wheelAcceleration>0.8</wheelAcceleration>
        <commandTopic>cmd_vel</commandTopic>
        <odometryFrame>odom</odometryFrame> 
        <odometryTopic>odom</odometryTopic>
        <publishOdomTF>true</publishOdomTF>
        <robotBaseFrame>base_footprint</robotBaseFrame>
    </plugin>
  </gazebo> -->

  <!-- rbn100 control -->
  <gazebo>
    <plugin name="rbn100_controller" filename="libgazebo_ros_rbn100.so">
      <rosDebugLevel>Info</rosDebugLevel>
      <update_rate>1000</update_rate>
      <publish_tf>1</publish_tf>
      <left_wheel_joint_name>left_wheel_joint</left_wheel_joint_name>
      <right_wheel_joint_name>right_wheel_joint</right_wheel_joint_name>
      <wheel_separation>0.322</wheel_separation>
      <wheel_diameter>0.169</wheel_diameter>
      <torque>1.0</torque>
      <!-- 按秒计算 -->
      <velocity_command_timeout>1</velocity_command_timeout> 
      <cliff_sensor_FL_name>cliff_FL</cliff_sensor_FL_name>
      <cliff_sensor_FR_name>cliff_FR</cliff_sensor_FR_name>
      <cliff_sensor_BL_name>cliff_BL</cliff_sensor_BL_name>
      <cliff_sensor_BR_name>cliff_BR</cliff_sensor_BR_name>
      <cliff_detection_threshold>0.12</cliff_detection_threshold>
      <bumper_name>bumper</bumper_name>
      <imu_name>imu</imu_name>
    </plugin>
  </gazebo>
</robot>
